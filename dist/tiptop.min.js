/*! tiptop - v0.0.0
 *  Release on: 2014-08-11
 *  Copyright (c) 2014 Cory Mawhorter
 *  Licensed MIT */
!function(){var a=this;!function(a,b){"function"==typeof define&&define.amd?define([],function(){return b(a)}):"undefined"!=typeof exports?module.exports=b(a):a.fn=b(a)}(a,function(a){"use strict";function b(a){if(1!==arguments.length)throw new Error("Invalid argument length");if("function"!=typeof arguments[0])throw new Error("Type passed was not a function");var b=f(a),c=function(){if(arguments.length!==b.length)throw new Error("Arguments do not match signature");for(var c=0;c<b.length;c++)e.call(this,b[c],arguments[c]);return a.apply(this,arguments)};return c.__fnSignature=0===b.length?"void":b.join(":"),c}function c(){if(0===arguments.length)throw new Error("Expects at least one argument");for(var a={},c=1===arguments.length&&"function"!=typeof arguments[0]?arguments[0]:arguments,e=0;e<c.length;e++){var f=b(c[e]);if("undefined"!=typeof a[f.__fnSignature])throw new Error("Duplicate signature detected for overload");a[f.__fnSignature]=f}return function(){var b;if(0===arguments.length)b=["void"];else{b=[];for(var c=0;c<arguments.length;c++)b.push(d(arguments[c]))}return a[b.join(":")].apply(this,arguments)}}function d(a){if("undefined"==typeof a||null===a)throw new Error("Undefined and null arguments are not currently supported");var b=a.constructor;if("undefined"==typeof b.name)throw new Error("Argument must have constructor to infer type");return b.name}function e(a,b){if("undefined"==typeof b)throw new Error("Parameter type does not exist");if("undefined"==typeof b||null===b)throw new Error("Undefined and null values are not currently supported");if(""===d(b))throw new Error("User object does not have name set");if(d(b)!==a)throw new Error("Parameter type does not match")}function f(a){var b=a.toString(),c=b.match(j),d=(null!==c&&"undefined"!=typeof c[1]?c[1]:"").trim(),e=[];return""!==d&&d.split(k).forEach(function(a){var b=a.match(l)||[],c=b[2];e.push(c)}),e}function g(){return a.fn=i,h}var h,i=a.fn,j=/^\s*function\s*\(\s*([^\)]*)\s*\)/i,k=/\s*,\s*/,l=/^\s*(.*)\$(.*)\s*$/;return h={typed:b,overloaded:c,noConflict:g,_parse:f,_assertParam:e,_getClass:d,_re:{params:j,sep:k,argType:l}}})}();